{"version":3,"sources":["components/Weatherbar.jsx","components/Weathercard.jsx","components/Weathersnippet.jsx","App.js","reportWebVitals.js","index.js","keys.jsx"],"names":["weatherbar","props","icon","weather","main","temp","id","className","style","justifyContent","display","margin","Math","round","src","alt","name","sys","country","date","Weathercard","useState","Date","setDate","useEffect","timerID","setInterval","clearInterval","description","wind","speed","deg","toLocaleTimeString","api","key","keys","API_KEY","base","BASE_URL","gkey","GEO_KEY","gbase","GEO_URL","Weathersnippet","query","setQuery","setWeather","search","e","fetch","then","res","json","result","console","log","type","placeholder","onChange","target","value","onKeyPress","humidity","feels_like","App","dateBuild","d","String","window","slice","onClick","rep","lat","lon","location","lng","Weatherbar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4c1e66e2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst weatherbar = (props) => {\r\n  const icon =\r\n    typeof props.weather.main != \"undefined\"\r\n      ? props.weather.main.temp > 18\r\n        ? \"summer\"\r\n        : \"winter\"\r\n      : \"\";\r\n\r\n  return (\r\n    <header id=\"statusbar\">\r\n      {typeof props.weather.main != \"undefined\" ? (\r\n        <div\r\n          className=\"scroll-left\"\r\n          style={{\r\n            justifyContent: \"space-evenly\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <p>\r\n            <div\r\n              style={{\r\n                display: \"inline-block\",\r\n                margin: \"0px 15px\",\r\n              }}\r\n            >\r\n              {Math.round(props.weather.main.temp)}°C,\r\n              {props.weather.weather[0].main}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"inline-block\",\r\n                margin: \"0px 15px\",\r\n              }}\r\n            >\r\n              <center>\r\n                <img\r\n                  src={`https://img.icons8.com/color/24/000000/${icon}--v1.png`}\r\n                  alt=\"icon\"\r\n                />{\" \"}\r\n                <img\r\n                  src={`https://img.icons8.com/color/24/000000/${icon}--v1.png`}\r\n                  alt=\"icon\"\r\n                />{\" \"}\r\n                <img\r\n                  src={`https://img.icons8.com/color/24/000000/${icon}--v1.png`}\r\n                  alt=\"icon\"\r\n                />{\" \"}\r\n                <img\r\n                  src={`https://img.icons8.com/color/24/000000/${icon}--v1.png`}\r\n                  alt=\"icon\"\r\n                />{\" \"}\r\n                <img\r\n                  src={`https://img.icons8.com/color/24/000000/${icon}--v1.png`}\r\n                  alt=\"icon\"\r\n                />\r\n              </center>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"inline-block\",\r\n                margin: \"0px 15px\",\r\n              }}\r\n            >\r\n              {props.weather.name}, {props.weather.sys.country}, {props.date}\r\n            </div>\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          Enter a location in the search bar or click on current location.\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default weatherbar;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Weathercard(props) {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  //Replaces componentDidMount and componentWillUnmount\r\n  useEffect(() => {\r\n    var timerID = setInterval(() => tick(), 1000);\r\n\r\n    return function cleanup() {\r\n      clearInterval(timerID);\r\n    };\r\n  });\r\n\r\n  function tick() {\r\n    setDate(new Date());\r\n  }\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {typeof props.weather.main != \"undefined\" ? (\r\n        <div className=\"row d-flex justify-content-center px-1\">\r\n          <div\r\n            className={props.weather.main.temp > 18 ? \" card hot\" : \"card cold\"}\r\n          >\r\n            <h2 className=\"ml-auto mr-4 mt-3 mb-0\">\r\n              {props.weather.name}, {props.weather.sys.country}\r\n            </h2>\r\n            <p className=\"ml-auto mr-4 mb-0 \">\r\n              {props.weather.weather[0].description}\r\n            </p>\r\n            <p className=\"ml-auto mr-4 mb-0 \">\r\n              <small>\r\n                Wind speed: {Math.round(props.weather.wind.speed)} m/s\r\n              </small>\r\n            </p>\r\n            <p className=\"ml-auto mr-4 mb-0 \">\r\n              <small>Wind direction: {props.weather.wind.deg}°</small>\r\n            </p>\r\n            <h1 className=\"ml-auto mr-4 large-font\">\r\n              {Math.round(props.weather.main.temp)}°C\r\n            </h1>\r\n            <h2 className=\"time-font mb-0 ml-4 mt-auto\">\r\n              {date.toLocaleTimeString()}\r\n            </h2>\r\n            <p className=\"ml-4 mb-4\">\r\n              <small>{props.date}</small>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"row d-flex justify-content-center px-1\">\r\n          <div className=\"card normal\">\r\n            <center>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              Enter a location in the search bar or click on current location.\r\n            </center>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weathercard;\r\n","import React, { useState } from \"react\";\r\nimport keys from \"../keys\";\r\nconst api = {\r\n  key: keys.API_KEY,\r\n  base: keys.BASE_URL,\r\n  gkey: keys.GEO_KEY,\r\n  gbase: keys.GEO_URL,\r\n};\r\nfunction Weathersnippet() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n  const search = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setQuery(\"\");\r\n          setWeather(result);\r\n          console.log(result);\r\n        });\r\n    }\r\n  };\r\n\r\n  return typeof weather.main != \"undefined\" ? (\r\n    <div className=\"snippet\">\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          value={query}\r\n          onKeyPress={search}\r\n        />\r\n      </div>\r\n      <span>\r\n        {weather.main.temp > 18 ? (\r\n          <img\r\n            src=\"https://img.icons8.com/color/96/000000/summer--v2.png\"\r\n            alt=\"icon\"\r\n          />\r\n        ) : (\r\n          <img\r\n            src=\"https://img.icons8.com/color/96/000000/winter--v1.png\"\r\n            alt=\"icon\"\r\n          />\r\n        )}\r\n      </span>\r\n      <div>\r\n        <p>\r\n          {weather.name}, {weather.sys.country}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <h4>\r\n          {Math.round(weather.main.temp)}\r\n          <sup>&deg;</sup>\r\n        </h4>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          <div className=\"header\">General</div>\r\n          <div className=\"value\">{weather.weather[0].main}</div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <div className=\"header\">Humidity</div>\r\n          <div className=\"value\">{weather.main.humidity}%</div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <div className=\"header\">Feels like</div>\r\n          <div className=\"value\">\r\n            {Math.round(weather.main.feels_like)}\r\n            <sup>&deg;</sup>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"snippet\">\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          value={query}\r\n          onKeyPress={search}\r\n        />\r\n      </div>\r\n      <span className=\"icon\">\r\n        <img\r\n          src=\"https://img.icons8.com/color/96/000000/four-seasons.png\"\r\n          alt=\"icon\"\r\n        />\r\n      </span>\r\n      <div className=\"title\">\r\n        <p>Location, Country</p>\r\n      </div>\r\n      <div className=\"temp\">\r\n        ???<sup>&deg;</sup>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          <div className=\"header\">General</div>\r\n          <div className=\"value\">???</div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <div className=\"header\">Humidity</div>\r\n          <div className=\"value\">???</div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <div className=\"header\">Feels like</div>\r\n          <div className=\"value\">???</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weathersnippet;\r\n","import React, { useState } from \"react\";\nimport Weatherbar from \"./components/Weatherbar\";\nimport keys from \"./keys\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport Weathercard from \"./components/Weathercard\";\nimport Weathersnippet from \"./components/Weathersnippet\";\n\nconst api = {\n  key: keys.API_KEY,\n  base: keys.BASE_URL,\n  gkey: keys.GEO_KEY,\n  gbase: keys.GEO_URL,\n};\n\nfunction App() {\n  const dateBuild = (d) => {\n    let date = String(new window.Date());\n    date = date.slice(0, 15);\n    return date;\n  };\n\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const search = (e) => {\n    if (e.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setQuery(\"\");\n          setWeather(result);\n          console.log(result);\n        });\n    }\n  };\n\n  const searchCoor = (lat, lon) => {\n    fetch(\n      `${api.base}weather?lat=${lat}&lon=${lon}&units=metric&APPID=${api.key}`\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        setQuery(\"\");\n        setWeather(result);\n        console.log(result);\n      });\n  };\n\n  const locate = () => {\n    fetch(\n      ` https://geo.ipify.org/api/v1?apiKey=at_jskCmCE0OpSgQwvfXNQEUUbxha5SA&ipAddress=`\n    )\n      .then((res) => res.json())\n      .then((rep) => {\n        searchCoor(rep.location.lat, rep.location.lng);\n      });\n  };\n  return (\n    <div className=\"main\">\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          className=\"search-bar\"\n          onChange={(e) => setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search}\n        />\n        <button className=\"btn btn-outline-dark btn-sm effect\" onClick={locate}>\n          Current Location\n        </button>\n      </div>\n      <Weatherbar weather={weather} date={dateBuild(new Date())} />\n\n      <Weathercard weather={weather} date={dateBuild(new Date())} />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-lg-4\">\n            <Weathersnippet />\n          </div>\n          <div className=\"col-lg-4\">\n            <Weathersnippet />\n          </div>\n          <div className=\"col-lg-4\">\n            <Weathersnippet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\r\n  API_KEY: \"722e60d3002183b6441c7def07a7df9c\",\r\n  BASE_URL: \"https://api.openweathermap.org/data/2.5/\",\r\n  GEO_KEY: \"at_jskCmCE0OpSgQwvfXNQEUUbxha5SA\",\r\n  GEO_URL: \"https://geo.ipify.org/api/v1?apiKey=\",\r\n};\r\n"],"sourceRoot":""}